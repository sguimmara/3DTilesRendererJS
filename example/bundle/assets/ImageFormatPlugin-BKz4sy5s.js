import{ah as N,y as X,g as z,ag as A,q as O,i as L}from"./three.module-e-akeimH.js";import{P as B}from"./TilesRenderer-C3SKmAML.js";const P=Symbol("TILE_X"),Y=Symbol("TILE_Y"),T=Symbol("TILE_LEVEL"),R=Symbol("UV_BOUNDS");class V{get maxLevel(){return this.levels-1}constructor(i={}){const{pixelSize:e=.01,center:t=!1,useRecommendedSettings:l=!0}=i;this.priority=-10,this.tiles=null,this.processQueue=null,this.processCallback=null,this.tileWidth=null,this.tileHeight=null,this.width=null,this.height=null,this.levels=null,this.overlap=0,this.pixelSize=e,this.center=t,this.useRecommendedSettings=l,this.flipY=!1,this._tilesNeedUpdate=!0}init(i){const e=new B;e.priorityCallback=i.downloadQueue.priorityCallback,e.maxJobs=20,this.useRecommendedSettings&&(i.errorTarget=window.devicePixelRatio),this.processCallback=t=>{const l=t[T],o=t[P],r=t[Y];for(let n=0;n<2;n++)for(let s=0;s<2;s++){const a=this.expand(l+1,2*o+n,2*r+s);a&&t.children.push(a)}return this._tilesNeedUpdate=!0,Promise.resolve()},this.processQueue=e,this.tiles=i}async parseToMesh(i,e,t,l,o){const r=new Blob([i]),n=await createImageBitmap(r,{premultiplyAlpha:"none",colorSpaceConversion:"none",imageOrientation:"flipY"}),s=new N(n);s.generateMipmaps=!1,s.colorSpace=X,s.needsUpdate=!0;let a=1,h=1,m=0,f=0,x=0;const u=e.boundingVolume.box;u&&([m,f,x]=u,a=u[3],h=u[7]);const c=new z(new A(2*a,2*h),new O({map:s}));return c.position.set(m,f,x),c}preprocessNode(i,e,t){const{maxLevel:l}=this;i[T]<l&&(this.processQueue.add(i,this.processCallback),this._tilesNeedUpdate=!0)}getTileset(i){const e={asset:{version:"1.1"},geometricError:1e5,root:{refine:"REPLACE",geometricError:1e5,boundingVolume:{},children:[]}},{maxLevel:t,width:l,height:o,tileWidth:r,tileHeight:n,center:s,pixelSize:a}=this,h=2**-t,m=Math.ceil(h*l/r),f=Math.ceil(h*o/n);for(let c=0;c<m;c++)for(let p=0;p<f;p++)e.root.children.push(this.expand(0,c,p));const x=s?-l/2:0,u=s?-o/2:0;return e.root.boundingVolume.box=[a*(x+l/2),a*(u+o/2),0,a*l/2,0,0,0,a*o/2,0,0,0,0],e.root[R]=[0,0,1,1],this.tiles.preprocessTileSet(e,i),e}getUrl(i,e,t){}expand(i,e,t){const{maxLevel:l,width:o,height:r,overlap:n,pixelSize:s,center:a,tileWidth:h,tileHeight:m,flipY:f}=this,x=a?s*-o/2:0,u=a?s*-r/2:0,c=2**-(l-i),p=Math.ceil(o*c),v=Math.ceil(r*c);let b=h*e-n,S=m*t-n,d=h+n*2,g=m+n*2;if(b<0&&(d+=b,b=0),S<0&&(g+=S,S=0),b+d>p&&(d-=b+d-p),S+g>v&&(g-=S+g-v),g<=0||d<=0)return null;const C=b+d/2;let y=S+g/2;f&&(y=v-y);const _=o/p,M=r/v,I=_*s*C,U=M*s*y,E=_*s*d/2,w=M*s*g/2;return{refine:"REPLACE",geometricError:s*(Math.max(o/p,r/v)-1),boundingVolume:{box:[I+x,U+u,0,E,0,0,0,w,0,0,0,0]},content:{uri:this.getUrl(i,e,t)},children:[],[P]:e,[Y]:t,[T]:i,[R]:[L.mapLinear(I-E,0,s*o,0,1),L.mapLinear(U-w,0,s*r,0,1),L.mapLinear(I+E,0,s*o,0,1),L.mapLinear(U+w,0,s*r,0,1)]}}doTilesNeedUpdate(){return this._tilesNeedUpdate?(this._tilesNeedUpdate=!1,!0):null}}class W extends V{constructor(...i){super(...i),this.name="DZI_TILES_PLUGIN",this.stem=null,this.format=null,this.flipY=!0}getUrl(i,e,t){return`${this.stem}_files/${i}/${e}_${t}.${this.format}`}loadRootTileSet(){const{tiles:i}=this;let e=i.rootURL;return i.invokeAllPlugins(t=>e=t.preprocessURL?t.preprocessURL(e,null):e),i.invokeOnePlugin(t=>t.fetchData&&t.fetchData(e,this.tiles.fetchOptions)).then(t=>t.text()).then(t=>{const l=new DOMParser().parseFromString(t,"text/xml");if(l.querySelector("DisplayRects")||l.querySelector("Collection"))throw new Error("DeepZoomImagesPlugin: DisplayRect and Collection DZI files not supported.");const o=l.querySelector("Image"),r=o.querySelector("Size"),n=parseInt(o.getAttribute("TileSize"));return this.tileWidth=n,this.tileHeight=n,this.overlap=parseInt(o.getAttribute("Overlap")),this.format=o.getAttribute("Format"),this.width=parseInt(r.getAttribute("Width")),this.height=parseInt(r.getAttribute("Height")),this.levels=Math.ceil(Math.log2(Math.max(this.width,this.height)))+1,this.stem=e.split(/\.[^.]+$/g)[0],this.getTileset(e)})}}export{W as D,V as I,R as U};
