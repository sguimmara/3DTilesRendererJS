import{G as f,d as A,aj as V,M as F,f as W,C as z}from"./three.module-e-akeimH.js";import{S as j,a as q}from"./EllipsoidRegionHelper-g8bGUcIO.js";import{t as L,a as J}from"./TilesRenderer-C3SKmAML.js";const B=Symbol("ORIGINAL_MATERIAL"),E=Symbol("HAS_RANDOM_COLOR"),y=Symbol("HAS_RANDOM_NODE_COLOR"),G=Symbol("LOAD_TIME"),p=Symbol("PARENT_BOUND_REF_COUNT"),O=new A,R=()=>{},H={};function T(c){if(!H[c]){const e=Math.random(),t=.5+Math.random()*.5,r=.375+Math.random()*.25;H[c]=new z().setHSL(e,t,r)}return H[c]}const u=0,S=1,P=2,N=3,k=4,I=5,w=6,D=7,x=8,U=9,v=10,K=Object.freeze({NONE:u,SCREEN_ERROR:S,GEOMETRIC_ERROR:P,DISTANCE:N,DEPTH:k,RELATIVE_DEPTH:I,IS_LEAF:w,RANDOM_COLOR:D,RANDOM_NODE_COLOR:x,CUSTOM_COLOR:U,LOAD_ORDER:v});class Z{static get ColorModes(){return K}constructor(e){e={displayParentBounds:!1,displayBoxBounds:!1,displaySphereBounds:!1,displayRegionBounds:!1,colorMode:u,maxDebugDepth:-1,maxDebugDistance:-1,maxDebugError:-1,customColorCallback:null,...e},this.name="DEBUG_TILES_PLUGIN",this.tiles=null,this._enabled=!0,this.extremeDebugDepth=-1,this.extremeDebugError=-1,this.boxGroup=null,this.sphereGroup=null,this.regionGroup=null,this._displayParentBounds=e.displayParentBounds,this.displayBoxBounds=e.displayBoxBounds,this.displaySphereBounds=e.displaySphereBounds,this.displayRegionBounds=e.displayRegionBounds,this.colorMode=e.colorMode,this.maxDebugDepth=e.maxDebugDepth,this.maxDebugDistance=e.maxDebugDistance,this.maxDebugError=e.maxDebugError,this.customColorCallback=e.customColorCallback,this.getDebugColor=(t,r)=>{r.setRGB(t,t,t)}}get enabled(){return this._enabled}set enabled(e){e!==this._enabled&&(this._enabled=e,this._enabled?this.tiles&&this.init(this.tiles):this.dispose())}get displayParentBounds(){return this._displayParentBounds}set displayParentBounds(e){this._displayParentBounds!==e&&(this._displayParentBounds=e,e?this.tiles.traverse(t=>{t.__visible&&this._onTileVisibilityChange(t,!0)}):L(this.tiles.root,null,t=>{t[p]=null,this._onTileVisibilityChange(t,t.__visible)}))}init(e){this.tiles=e;const t=e.group;this.boxGroup=new f,this.boxGroup.name="DebugTilesRenderer.boxGroup",t.add(this.boxGroup),this.boxGroup.updateMatrixWorld(),this.sphereGroup=new f,this.sphereGroup.name="DebugTilesRenderer.sphereGroup",t.add(this.sphereGroup),this.sphereGroup.updateMatrixWorld(),this.regionGroup=new f,this.regionGroup.name="DebugTilesRenderer.regionGroup",t.add(this.regionGroup),this.regionGroup.updateMatrixWorld(),this._onLoadTileSetCB=()=>{this._initExtremes()},this._onLoadModelCB=({scene:r,tile:i})=>{this._onLoadModel(r,i)},this._onDisposeModelCB=({tile:r})=>{this._onDisposeModel(r)},this._onUpdateAfterCB=()=>{this._onUpdateAfter()},this._onTileVisibilityChangeCB=({scene:r,tile:i,visible:l})=>{this._onTileVisibilityChange(i,l)},e.addEventListener("load-tile-set",this._onLoadTileSetCB),e.addEventListener("load-model",this._onLoadModelCB),e.addEventListener("dispose-model",this._onDisposeModelCB),e.addEventListener("update-after",this._onUpdateAfterCB),e.addEventListener("tile-visibility-change",this._onTileVisibilityChangeCB),this._initExtremes(),e.traverse(r=>{r.cached.scene&&this._onLoadModel(r.cached.scene,r)}),e.visibleTiles.forEach(r=>{this._onTileVisibilityChange(r,!0)})}getTileInformationFromActiveObject(e){let t=null;return this.tiles.activeTiles.forEach(i=>{if(t)return!0;const l=i.cached.scene;l&&l.traverse(d=>{d===e&&(t=i)})}),t?{distanceToCamera:t.__distanceFromCamera,geometricError:t.geometricError,screenSpaceError:t.__error,depth:t.__depth,isLeaf:t.__isLeaf}:null}_initExtremes(){if(!(this.tiles&&this.tiles.root))return;let e=-1,t=-1;L(this.tiles.root,null,(r,i,l)=>{e=Math.max(e,l),t=Math.max(t,r.geometricError)}),this.extremeDebugDepth=e,this.extremeDebugError=t}_onUpdateAfter(){const e=this.tiles;if(!e.root)return;this.boxGroup.visible=this.displayBoxBounds,this.sphereGroup.visible=this.displaySphereBounds,this.regionGroup.visible=this.displayRegionBounds;let t=-1;this.maxDebugDepth===-1?t=this.extremeDebugDepth:t=this.maxDebugDepth;let r=-1;this.maxDebugError===-1?r=this.extremeDebugError:r=this.maxDebugError;let i=-1;this.maxDebugDistance===-1?(e.getBoundingSphere(O),i=O.radius):i=this.maxDebugDistance;const l=this.errorTarget,d=this.colorMode,s=e.visibleTiles;let n;d===v&&(n=Array.from(s).sort((a,C)=>a[G]-C[G])),s.forEach(a=>{const C=a.cached.scene;let m,b,_;d===D&&(m=Math.random(),b=.5+Math.random()*.5,_=.375+Math.random()*.25),C.traverse(o=>{d===x&&(m=Math.random(),b=.5+Math.random()*.5,_=.375+Math.random()*.25);const M=o.material;if(M){const g=o[B];if(d===u&&M!==g)o.material.dispose(),o.material=o[B];else if(d!==u&&M===g)if(o.isPoints){const h=new V;h.size=g.size,h.sizeAttenuation=g.sizeAttenuation,o.material=h}else o.material=new F,o.material.flatShading=!0;switch(d!==D&&delete o.material[E],d!==x&&delete o.material[y],d){case k:{const h=a.__depth/t;this.getDebugColor(h,o.material.color);break}case I:{const h=a.__depthFromRenderedParent/t;this.getDebugColor(h,o.material.color);break}case S:{const h=a.__error/l;h>1?o.material.color.setRGB(1,0,0):this.getDebugColor(h,o.material.color);break}case P:{const h=Math.min(a.geometricError/r,1);this.getDebugColor(h,o.material.color);break}case N:{const h=Math.min(a.__distanceFromCamera/i,1);this.getDebugColor(h,o.material.color);break}case w:{!a.children||a.children.length===0?this.getDebugColor(1,o.material.color):this.getDebugColor(0,o.material.color);break}case x:{o.material[y]||(o.material.color.setHSL(m,b,_),o.material[y]=!0);break}case D:{o.material[E]||(o.material.color.setHSL(m,b,_),o.material[E]=!0);break}case U:{this.customColorCallback?this.customColorCallback(a,o):console.warn("DebugTilesRenderer: customColorCallback not defined");break}case v:{const h=n.indexOf(a);this.getDebugColor(h/(n.length-1),o.material.color);break}}}})})}_onTileVisibilityChange(e,t){this.displayParentBounds?J(e,r=>{r[p]==null&&(r[p]=0),t?r[p]++:r[p]>0&&r[p]--;const i=r===e&&t||this.displayParentBounds&&r[p]>0;this._updateBoundHelper(r,i)}):this._updateBoundHelper(e,t)}_createBoundHelper(e){const t=this.tiles,r=e.cached,{sphere:i,obb:l,region:d}=r.boundingVolume;if(l){const s=new f;s.name="DebugTilesRenderer.boxHelperGroup",s.matrix.copy(l.transform),s.matrixAutoUpdate=!1;const n=new W(l.box,T(e.__depth));n.raycast=R,s.add(n),r.boxHelperGroup=s,t.visibleTiles.has(e)&&this.displayBoxBounds&&(this.boxGroup.add(s),s.updateMatrixWorld(!0))}if(i){const s=new j(i,T(e.__depth));s.raycast=R,r.sphereHelper=s,t.visibleTiles.has(e)&&this.displaySphereBounds&&(this.sphereGroup.add(s),s.updateMatrixWorld(!0))}if(d){const s=new q(d,T(e.__depth));s.raycast=R;const n=new A;d.getBoundingSphere(n),s.position.copy(n.center),n.center.multiplyScalar(-1),s.geometry.translate(...n.center),r.regionHelper=s,t.visibleTiles.has(e)&&this.displayRegionBounds&&(this.regionGroup.add(s),s.updateMatrixWorld(!0))}}_updateHelperMaterial(e,t){e.__visible||!this.displayParentBounds?t.opacity=1:t.opacity=.2;const r=t.transparent;t.transparent=t.opacity<1,t.transparent!==r&&(t.needsUpdate=!0)}_updateBoundHelper(e,t){const r=e.cached;if(!r)return;const i=this.sphereGroup,l=this.boxGroup,d=this.regionGroup;t&&r.boxHelperGroup==null&&r.sphereHelper==null&&r.regionHelper==null&&this._createBoundHelper(e);const s=r.boxHelperGroup,n=r.sphereHelper,a=r.regionHelper;t?(s&&(l.add(s),s.updateMatrixWorld(!0),this._updateHelperMaterial(e,s.children[0].material)),n&&(i.add(n),n.updateMatrixWorld(!0),this._updateHelperMaterial(e,n.material)),a&&(d.add(a),a.updateMatrixWorld(!0),this._updateHelperMaterial(e,a.material))):(s&&l.remove(s),n&&i.remove(n),a&&d.remove(a))}_onLoadModel(e,t){t[G]=performance.now(),e.traverse(r=>{const i=r.material;i&&(r[B]=i)})}_onDisposeModel(e){const t=e.cached;t.boxHelperGroup&&(t.boxHelperGroup.children[0].geometry.dispose(),delete t.boxHelperGroup),t.sphereHelper&&(t.sphereHelper.geometry.dispose(),delete t.sphereHelper),t.regionHelper&&(t.regionHelper.geometry.dispose(),delete t.regionHelper)}dispose(){var t,r,i;const e=this.tiles;e&&(e.removeEventListener("load-tile-set",this._onLoadTileSetCB),e.removeEventListener("load-model",this._onLoadModelCB),e.removeEventListener("dispose-model",this._onDisposeModelCB),e.removeEventListener("update-after",this._onUpdateAfterCB),e.removeEventListener("tile-visibility-change",this._onTileVisibilityChangeCB),this.colorMode=u,this._onUpdateAfter(),e.traverse(l=>{this._onDisposeModel(l)})),(t=this.boxGroup)==null||t.removeFromParent(),(r=this.sphereGroup)==null||r.removeFromParent(),(i=this.regionGroup)==null||i.removeFromParent()}}export{Z as D};
