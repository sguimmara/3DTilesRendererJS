import{j as H,k as D,l as W,m as N,g as V,B as j,d as $,n as k,o as B,p as q,q as Q,W as X,S as Z,a as J,O as K,i as f}from"./three.module-e-akeimH.js";/* empty css               */import{D as Y}from"./DRACOLoader-CI7k7Ryy.js";import{g as ee}from"./lil-gui.module.min-Vka56b52.js";import{S as te}from"./stats.module--VATS4Kh.js";import{C as ae}from"./CameraTransitionManager-Aw6C4CUi.js";import{G as ne}from"./GlobeControls-Cuf62xaE.js";import{C as L,t as ie}from"./Ellipsoid-Ctcbk2JV.js";import{T as re}from"./TilesRenderer-C3SKmAML.js";import{C as se}from"./CesiumIonAuthPlugin-B_Ue9A_U.js";import{T as oe}from"./TileCompressionPlugin-NK0eA6bF.js";import{U as ce}from"./UpdateOnChangePlugin-B00hu5lt.js";import{U as de}from"./UnloadTilesPlugin-CgJIUO0v.js";import{T as le}from"./TilesFadePlugin-Bg3AWZ7_.js";import{F as he,G as ue}from"./GLTFExtensionsPlugin-BCbfruSg.js";import{W as I}from"./I3DMLoader-BvoAYWAX.js";import"./EnvironmentControls-BRJ_vGuv.js";import"./B3DMLoader-BmDNS6RO.js";import"./readMagicBytes-CUUeQGnc.js";import"./GLTFLoader-uVyzW9cX.js";import"./PNTSLoader-DzQ3_PKf.js";import"./CMPTLoader-Bq-8QR4v.js";import"./EllipsoidRegion-DVvlgLqj.js";const S=new D,v=new W,G=new W;class me extends H{constructor(...e){super(...e),this.resetDistance=1e4,this._matricesTextureHandle=null,this._lastCameraPos=new D,this._forceUpdate=!0,this._matrices=[]}setMatrixAt(e,t){super.setMatrixAt(e,t),this._forceUpdate=!0;const a=this._matrices;for(;a.length<=e;)a.push(new D);a[e].copy(t)}setInstanceCount(...e){super.setInstanceCount(...e);const t=this._matrices;for(;t.length>this.instanceCount;)t.pop()}onBeforeRender(e,t,a,s,d,n){super.onBeforeRender(e,t,a,s,d,n),v.setFromMatrixPosition(a.matrixWorld),G.setFromMatrixPosition(this._lastCameraPos);const c=this._matricesTexture;let r=this._modelViewMatricesTexture;if((!r||r.image.width!==c.image.width||r.image.height!==c.image.height)&&(r&&r.dispose(),r=c.clone(),r.source=new N({...r.image,data:r.image.data.slice()}),this._modelViewMatricesTexture=r),this._forceUpdate||v.distanceTo(G)>this.resetDistance){const l=this._matrices,h=r.image.data;for(let m=0;m<this.maxInstanceCount;m++){const p=l[m];p?S.copy(p):S.identity(),S.premultiply(this.matrixWorld).premultiply(a.matrixWorldInverse).toArray(h,m*16)}r.needsUpdate=!0,this._lastCameraPos.copy(a.matrixWorld),this._forceUpdate=!1}this._matricesTextureHandle=this._matricesTexture,this._matricesTexture=this._modelViewMatricesTexture,this.matrixWorld.copy(this._lastCameraPos)}onAfterRender(){this.updateMatrixWorld(),this._matricesTexture=this._matricesTextureHandle,this._matricesTextureHandle=null}onAfterShadow(e,t,a,s,d,n){this.onAfterRender(e,null,s,d,n)}dispose(){super.dispose(),this._modelViewMatricesTexture&&this._modelViewMatricesTexture.dispose()}}const T=new V,b=[];class pe extends me{constructor(...e){super(...e),this.expandPercent=.25,this.maxInstanceExpansionSize=1/0,this._freeGeometryIds=[]}findFreeId(e,t,a){const s=!!this.geometry.index,d=Math.max(s?e.index.count:-1,a),n=Math.max(e.attributes.position.count,t);let c=-1,r=1/0;const l=this._freeGeometryIds;if(l.forEach((h,m)=>{const p=this.getGeometryRangeAt(h),{reservedIndexCount:g,reservedVertexCount:x}=p;if(g>=d&&x>=n){const y=d-g+(n-x);y<r&&(c=m,r=y)}}),c!==-1){const h=l[c];return l.splice(c,1),h}else return-1}addGeometry(e,t,a){const s=!!this.geometry.index;a=Math.max(s?e.index.count:-1,a),t=Math.max(e.attributes.position.count,t);const{expandPercent:d,_freeGeometryIds:n}=this;let c=this.findFreeId(e,t,a);if(c!==-1)this.setGeometryAt(c,e);else{const r=()=>{const m=this.unusedVertexCount<t,p=this.unusedIndexCount<a;return m||p},l=e.index,h=e.attributes.position;if(t=Math.max(t,h.count),a=Math.max(a,l?l.count:0),r()&&(n.forEach(m=>this.deleteGeometry(m)),n.length=0,this.optimize(),r())){const m=this.geometry.index,p=this.geometry.attributes.position;let g,x;if(m){const y=Math.ceil(d*m.count);g=Math.max(y,a,l.count)+m.count}else g=Math.max(this.unusedIndexCount,a);if(p){const y=Math.ceil(d*p.count);x=Math.max(y,t,h.count)+p.count}else x=Math.max(this.unusedVertexCount,t);this.setGeometrySize(x,g)}c=super.addGeometry(e,t,a)}return c}addInstance(e){if(this.maxInstanceCount===this.instanceCount){const t=Math.ceil(this.maxInstanceCount*(1+this.expandPercent));this.setInstanceCount(Math.min(t,this.maxInstanceExpansionSize))}return super.addInstance(e)}deleteInstance(e){const t=this.getGeometryIdAt(e);return t!==-1&&this._freeGeometryIds.push(t),super.deleteInstance(e)}raycastInstance(e,t,a){const s=this.geometry,d=this.getGeometryIdAt(e);T.material=this.material,T.geometry.index=s.index,T.geometry.attributes=s.attributes;const n=this.getGeometryRangeAt(d);T.geometry.setDrawRange(n.start,n.count),T.geometry.boundingBox===null&&(T.geometry.boundingBox=new j),T.geometry.boundingSphere===null&&(T.geometry.boundingSphere=new $),this.getMatrixAt(e,T.matrixWorld).premultiply(this.matrixWorld),this.getBoundingBoxAt(d,T.geometry.boundingBox),this.getBoundingSphereAt(d,T.geometry.boundingSphere),T.raycast(t,b);for(let c=0,r=b.length;c<r;c++){const l=b[c];l.object=this,l.batchId=e,a.push(l)}b.length=0}}function ge(o){return o.r===1&&o.g===1&&o.b===1}function xe(o){o.needsUpdate=!0,o.onBeforeCompile=e=>{e.vertexShader=e.vertexShader.replace("#include <common>",`
				#include <common>
				varying float texture_index;
				`).replace("#include <uv_vertex>",`
				#include <uv_vertex>
				texture_index = getIndirectIndex( gl_DrawID );
				`),e.fragmentShader=e.fragmentShader.replace("#include <map_pars_fragment>",`
				#ifdef USE_MAP
				precision highp sampler2DArray;
				uniform sampler2DArray map;
				varying float texture_index;
				#endif
				`).replace("#include <map_fragment>",`
				#ifdef USE_MAP
					diffuseColor *= texture( map, vec3( vMapUv, texture_index ) );
				#endif
				`)}}const E=new he(new Q),U=new q(new Uint8Array([255,255,255,255]),1,1);U.needsUpdate=!0;class fe{constructor(e={}){if(parseInt(k)<170)throw new Error("BatchedTilesPlugin: Three.js revision 170 or higher required.");e={instanceCount:500,vertexCount:750,indexCount:2e3,expandPercent:.25,maxInstanceCount:1/0,discardOriginalContent:!0,textureSize:null,material:null,renderer:null,...e},this.name="BATCHED_TILES_PLUGIN",this.priority=-1;const t=e.renderer.getContext();this.instanceCount=e.instanceCount,this.vertexCount=e.vertexCount,this.indexCount=e.indexCount,this.material=e.material?e.material.clone():null,this.expandPercent=e.expandPercent,this.maxInstanceCount=Math.min(e.maxInstanceCount,t.getParameter(t.MAX_3D_TEXTURE_SIZE)),this.renderer=e.renderer,this.discardOriginalContent=e.discardOriginalContent,this.textureSize=e.textureSize,this.batchedMesh=null,this.arrayTarget=null,this.tiles=null,this._onLoadModel=null,this._onDisposeModel=null,this._onVisibilityChange=null,this._tileToInstanceId=new Map}init(e){this._onDisposeModel=({scene:t,tile:a})=>{this.removeSceneFromBatchedMesh(t,a)},e.addEventListener("dispose-model",this._onDisposeModel),this.tiles=e}initBatchedMesh(e){if(this.batchedMesh!==null)return;const{instanceCount:t,vertexCount:a,indexCount:s,tiles:d,renderer:n,textureSize:c}=this,r=this.material?this.material:new e.material.constructor,l=new pe(t,t*a,t*s,r);l.name="BatchTilesPlugin",l.frustumCulled=!1,d.group.add(l),l.updateMatrixWorld();const h=e.material.map,m={colorSpace:h.colorSpace,wrapS:h.wrapS,wrapT:h.wrapT,wrapR:h.wrapS,magFilter:h.magFilter},p=new B(c||h.image.width,c||h.image.height,t);Object.assign(p.texture,m),n.initRenderTarget(p),r.map=p.texture,xe(r),this.arrayTarget=p,this.batchedMesh=l}setTileVisible(e,t){const a=e.cached.scene;if(t&&this.addSceneToBatchedMesh(a,e),this._tileToInstanceId.has(e)){this._tileToInstanceId.get(e).forEach(n=>{this.batchedMesh.setVisibleAt(n,t)});const d=this.tiles;return t?d.visibleTiles.add(e):d.visibleTiles.delete(e),d.dispatchEvent({type:"tile-visibility-change",scene:a,tile:e,visible:t}),!0}return!1}unloadTileFromGPU(e,t){return!this.discardOriginalContent&&this._tileToInstanceId.has(t)?(this.removeSceneFromBatchedMesh(e,t),!0):!1}assignTextureToLayer(e,t){this.expandArrayTargetIfNeeded();const{renderer:a}=this,s=a.getRenderTarget();a.setRenderTarget(this.arrayTarget,t),E.material.map=e,E.render(a),a.setRenderTarget(s),E.material.map=null,e.dispose()}expandArrayTargetIfNeeded(){const{batchedMesh:e,arrayTarget:t,renderer:a}=this,s=Math.min(e.maxInstanceCount,this.maxInstanceCount);if(s>t.depth){const d={colorSpace:t.texture.colorSpace,wrapS:t.texture.wrapS,wrapT:t.texture.wrapT,generateMipmaps:t.texture.generateMipmaps,minFilter:t.texture.minFilter,magFilter:t.texture.magFilter},n=new B(t.width,t.height,s);Object.assign(n.texture,d),a.initRenderTarget(n),a.copyTextureToTexture(t.texture,n.texture),t.dispose(),e.material.map=n.texture,this.arrayTarget=n}}removeSceneFromBatchedMesh(e,t){if(this._tileToInstanceId.has(t)){const a=this._tileToInstanceId.get(t);this._tileToInstanceId.delete(t),a.forEach(s=>{this.batchedMesh.deleteInstance(s)})}}addSceneToBatchedMesh(e,t){if(this._tileToInstanceId.has(t))return;const a=[];e.traverse(n=>{n.isMesh&&a.push(n)});let s=!0;a.forEach(n=>{if(this.batchedMesh&&s){const c=n.geometry.attributes,r=this.batchedMesh.geometry.attributes;for(const l in r)if(!(l in c)){s=!1;return}}});const d=!this.batchedMesh||this.batchedMesh.instanceCount+a.length<=this.maxInstanceCount;if(s&&d){e.updateMatrixWorld();const n=[];a.forEach(c=>{this.initBatchedMesh(c);const{geometry:r,material:l}=c,{batchedMesh:h,expandPercent:m}=this;h.expandPercent=m;const p=h.addGeometry(r,this.vertexCount,this.indexCount),g=h.addInstance(p);n.push(g),h.setMatrixAt(g,c.matrixWorld),h.setVisibleAt(g,!1),ge(l.color)||(l.color.setHSL(Math.random(),.5,.5),h.setColorAt(g,l.color));const x=l.map;x?this.assignTextureToLayer(x,g):this.assignTextureToLayer(U,g)}),this._tileToInstanceId.set(t,n),this.discardOriginalContent&&(t.cached.textures.forEach(c=>{c.image instanceof ImageBitmap&&c.image.close()}),t.cached.scene=null,t.cached.materials=[],t.cached.geometries=[],t.cached.textures=[])}}raycastTile(e,t,a,s){return this._tileToInstanceId.has(e)?(this._tileToInstanceId.get(e).forEach(n=>{this.batchedMesh.raycastInstance(n,a,s)}),!0):!1}dispose(){const{arrayTarget:e,tiles:t,batchedMesh:a}=this;e&&e.dispose(),a&&(a.material.dispose(),a.geometry.dispose(),a.dispose(),a.removeFromParent()),t.removeEventListener("dispose-model",this._onDisposeModel)}getTileBatchIds(e){return this._tileToInstanceId.get(e)}}let w,_,C,i,u,A,P;const M={orthographic:!1,enableCacheDisplay:!1,enableRendererStats:!1,useBatchedMesh:!!new URLSearchParams(window.location.hash.replace(/^#/,"")).get("batched"),errorTarget:40,reload:z};Ce();O();function z(){i&&(_.remove(i.group),i.dispose(),i=null),i=new re,i.registerPlugin(new se({apiToken:"",assetId:"2275207",autoRefreshToken:!0})),i.registerPlugin(new oe),i.registerPlugin(new ce),i.registerPlugin(new de),i.registerPlugin(new le),i.registerPlugin(new ue({dracoLoader:new Y().setDecoderPath("https://unpkg.com/three@0.153.0/examples/jsm/libs/draco/gltf/")})),M.useBatchedMesh&&i.registerPlugin(new fe({renderer:C,discardOriginalContent:!1,instanceCount:250})),i.group.rotation.x=-Math.PI/2,_.add(i.group),i.setResolutionFromRenderer(u.camera,C),i.setCamera(u.camera),w.setTilesRenderer(i)}function Ce(){C=new X({antialias:!0}),C.setClearColor(1383455),document.body.appendChild(C.domElement),_=new Z,u=new ae(new J(60,window.innerWidth/window.innerHeight,1,16e7),new K(-1,1,1,-1,1,16e7)),u.perspectiveCamera.position.set(48e5,257e4,1472e4),u.perspectiveCamera.lookAt(0,0,0),u.autoSync=!1,u.addEventListener("camera-change",({camera:a,prevCamera:s})=>{i.deleteCamera(s),i.setCamera(a),w.setCamera(a)}),u.orthographicPositionalZoom=!1,w=new ne(_,u.camera,C.domElement,null),w.enableDamping=!0,z(),F(),window.addEventListener("resize",F,!1),window.addEventListener("hashchange",R);const o=new ee;o.width=300,o.add(M,"orthographic").onChange(a=>{w.getPivotPoint(u.fixedPoint),u.animating||(u.syncCameras(),w.adjustCamera(u.perspectiveCamera),w.adjustCamera(u.orthographicCamera)),u.toggle()});const e=o.addFolder("Google Photorealistic Tiles");e.add(M,"useBatchedMesh").listen(),e.add(M,"reload");const t=o.addFolder("Example Options");t.add(M,"enableCacheDisplay"),t.add(M,"enableRendererStats"),t.add(M,"errorTarget",5,100,1).onChange(()=>{i.getPluginByName("UPDATE_ON_CHANGE_PLUGIN").needsUpdate=!0}),A=document.createElement("div"),document.getElementById("info").appendChild(A),P=new te,P.showPanel(0),document.body.appendChild(P.dom),R(),setInterval(Te,100)}function F(){const{perspectiveCamera:o,orthographicCamera:e}=u,t=window.innerWidth/window.innerHeight;o.aspect=t,o.updateProjectionMatrix(),e.left=-e.top*t,e.right=-e.left,e.updateProjectionMatrix(),C.setSize(window.innerWidth,window.innerHeight),C.setPixelRatio(window.devicePixelRatio)}function Te(){if(!i)return;const o=u.camera,e={},t={},a=i.group.matrixWorld.clone().invert(),s=o.position.clone().applyMatrix4(a),d=o.matrixWorld.clone().premultiply(a);I.getPositionToCartographic(s,e),I.getAzElRollFromRotationMatrix(e.lat,e.lon,d,t,L),t.azimuth*=f.RAD2DEG,t.elevation*=f.RAD2DEG,t.roll*=f.RAD2DEG,e.lat*=f.RAD2DEG,e.lon*=f.RAD2DEG;const n=new URLSearchParams;n.set("lat",e.lat.toFixed(4)),n.set("lon",e.lon.toFixed(4)),n.set("height",e.height.toFixed(2)),n.set("az",t.azimuth.toFixed(2)),n.set("el",t.elevation.toFixed(2)),n.set("roll",t.roll.toFixed(2)),M.useBatchedMesh&&n.set("batched",1),window.history.replaceState(void 0,void 0,`#${n}`)}function R(){const o=window.location.hash.replace(/^#/,""),e=new URLSearchParams(o);if(e.has("batched")&&(M.useBatchedMesh=!!e.get("batched")),!e.has("lat")&&!e.has("lon"))return;i.group.updateMatrixWorld();const t=u.camera,a=parseFloat(e.get("lat")),s=parseFloat(e.get("lon")),d=parseFloat(e.get("height"))||1e3;if(e.has("az")&&e.has("el")){const n=parseFloat(e.get("az")),c=parseFloat(e.get("el")),r=parseFloat(e.get("roll"))||0;I.getRotationMatrixFromAzElRoll(a*f.DEG2RAD,s*f.DEG2RAD,n*f.DEG2RAD,c*f.DEG2RAD,r*f.DEG2RAD,t.matrixWorld,L),t.matrixWorld.premultiply(i.group.matrixWorld),t.matrixWorld.decompose(t.position,t.quaternion,t.scale),I.getCartographicToPosition(a*f.DEG2RAD,s*f.DEG2RAD,d,t.position),t.position.applyMatrix4(i.group.matrixWorld)}else I.getCartographicToPosition(a*f.DEG2RAD,s*f.DEG2RAD,d,t.position),t.position.applyMatrix4(i.group.matrixWorld),t.lookAt(0,0,0)}function O(){if(requestAnimationFrame(O),!i)return;w.enabled=!u.animating,w.update(),u.update();const o=u.camera;i.setResolutionFromRenderer(o,C),i.setCamera(o),o.updateMatrixWorld(),i.errorTarget=M.errorTarget,i.update(),C.render(_,o),P.update(),Me()}function Me(){var d,n,c;let o="";if(M.enableCacheDisplay){const r=i.lruCache,l=r.cachedBytes/r.maxBytesSize;o+=`Downloading: ${i.stats.downloading} Parsing: ${i.stats.parsing} Visible: ${i.visibleTiles.size}<br/>`,o+=`Cache: ${(100*l).toFixed(2)}% ~${(r.cachedBytes/1e3/1e3).toFixed(2)}mb<br/>`}if(M.enableRendererStats){const r=C.info.memory,l=C.info.render,h=C.info.programs.length;o+=`Geometries: ${r.geometries} Textures: ${r.textures} Programs: ${h} Draw Calls: ${l.calls}`;const m=i.getPluginByName("BATCHED_TILES_PLUGIN"),p=i.getPluginByName("FADE_TILES_PLUGIN");if(m){let g=0;(d=m.batchedMesh)==null||d._instanceInfo.forEach(x=>{x.visible&&x.active&&g++}),(n=p.batchedMesh)==null||n._instanceInfo.forEach(x=>{x.visible&&x.active&&g++}),o+=", Batched: "+g}}A.innerHTML!==o&&(A.innerHTML=o);const e=i.group.matrixWorld.clone().invert(),t=u.camera.position.clone().applyMatrix4(e),a={};I.getPositionToCartographic(t,a);const s=((c=i.getAttributions()[0])==null?void 0:c.value)||"";document.getElementById("credits").innerText=ie(a.lat,a.lon)+`
`+s}
